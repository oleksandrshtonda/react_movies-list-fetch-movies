{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","title","description","imgUrl","imdbUrl","_jsxs","className","children","_jsx","src","alt","href","MoviesList","movies","map","imdbId","API_URL","concat","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","queryTitle","setQueryTitle","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","movieFoundError","setMovieFoundError","_useState7","_useState8","newMovie","setNewMovie","_useState9","_useState10","isFindingAgain","setIsFindingAgain","_useState11","_useState12","movieWasAskedOnce","setMovieWasAskedOnce","loadMovie","query","trim","fetch","then","res","json","catch","Response","Error","movieFromServer","_ref4","Title","Poster","Plot","imdbID","_Fragment","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","length","onClick","copyOfMovies","_toConsumableArray","find","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a491eb6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nconst DEFAULT_PICTURE\n    = 'https://dummyimage.com/360x270/e3e3e3/000000&text=no+preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl !== 'N/A' ? imgUrl : DEFAULT_PICTURE}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        movie={movie}\n        key={movie.imdbId}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = 'be702b19';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ninterface Props {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n}\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [queryTitle, setQueryTitle] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieFoundError, setMovieFoundError] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isFindingAgain, setIsFindingAgain] = useState(false);\n  const [movieWasAskedOnce, setMovieWasAskedOnce] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMovieFoundError(false);\n    setQueryTitle(event.target.value);\n  };\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const handleAddMovieToList = () => {\n    const copyOfMovies: Movie[] = [...movies];\n    const movieAlreadyInList = copyOfMovies.find(movie => {\n      const { imdbId } = newMovie as Movie;\n\n      return movie.imdbId === imdbId;\n    });\n\n    if (!movieAlreadyInList) {\n      setMovies([...copyOfMovies, newMovie as Movie]);\n    }\n\n    setNewMovie(null);\n    setQueryTitle('');\n  };\n\n  const loadMovie = () => {\n    setIsLoading(true);\n\n    getMovie(queryTitle.trim())\n      .catch(() => setMovieFoundError(true))\n      .then(movieFromServer => {\n        const { Response } = movieFromServer as ResponseError;\n\n        if (Response !== 'False') {\n          const {\n            Title, Poster, Plot, imdbID,\n          } = movieFromServer as MovieData;\n\n          const newMovieFromServer: Movie = {\n            title: Title,\n            imgUrl: Poster,\n            description: Plot,\n            imdbId: imdbID,\n            imdbUrl: imdbID,\n          };\n\n          setNewMovie(newMovieFromServer);\n        } else {\n          setMovieFoundError(true);\n          setIsFindingAgain(false);\n          setNewMovie(null);\n        }\n\n        setIsLoading(false);\n        setMovieWasAskedOnce(true);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': movieFoundError,\n                },\n              )}\n              value={queryTitle}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {movieFoundError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={queryTitle.trim().length === 0}\n              onClick={() => loadMovie()}\n            >\n              {movieWasAskedOnce ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {newMovie !== null && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieToList}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {newMovie !== null && !movieFoundError && !isFindingAgain && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}